---
title: "Differential Expression Analysis I"
subtitle: "Joint analysis of all samples"
date: today
toc: true
toc-depth: 4
embed-resources: true
execute: 
  echo: false
  warning: false
  message: false   
format: html
---

> To identify transcriptional changes associated with Cre-mediated ApoE4→ApoE2 conversion, we performed differential expression (DE) analysis comparing Cre-AAV-treated mice to GFP   control animals in both liver and brain tissues. **Samples from Batches 1 and 2 were analyzed jointly**, as both were processed under comparable experimental and sequencing conditions.

## Handling Batch-Treatment Confounding

The experimental design presented a challenge for batch effect correction: *Batch 1 included only GFP control mice, while Batch 2 contained both GFP controls and Cre-AAV-treated animals*. Although tissue and sex distributions were balanced within each batch (50% brain and 50% liver for both sexes), the absence of Cre-AAV samples in Batch 1 created a **nesting** of treatment within batch that complicated the analysis strategy.

<details>

<summary>Understanding nesting</summary>


**What does "nesting" mean in this context?**

In this experiment: 
- **Batch 1** = All GFP controls (no Cre-AAV samples)  
- **Batch 2** = Both GFP controls AND Cre-AAV samples

This means **Treatment** (Cre-AAV vs GFP) is nested within **Batch**: every Cre-AAV sample comes from Batch 2. This creates a dependency between batch and treatment variables.

**Why is this problematic?**

When treatment is nested within batch, any observed difference between Cre-AAV and GFP could potentially be attributed to: - True biological effect of the treatment, OR - Technical batch effects (differences in processing, sequencing, or other technical factors between batches)

**Key limitations and assumptions:**

-   **No interaction testing**: We cannot test whether the treatment effect differs between batches (batch × treatment interaction) because Cre-AAV samples only exist in Batch 2. We must assume the treatment effect would be similar in both batches.

-   **Information source**: All information about the treatment effect comes from comparisons within Batch 2. Batch 1 samples contribute to estimating the batch effect and improving dispersion estimates but do not directly inform the treatment contrast.

-   **Uncertainty**: If batch effects are large relative to treatment effects, our ability to confidently attribute differences to treatment is reduced, even with batch adjustment.

</details>

Principal component analysis of the normalized expression data revealed no distinct clustering by batch, and technical replicates clustered appropriately together, suggesting that batch-related technical variation was minimal relative to biological variation. Given this empirical evidence of minimal batch effects, we proceeded with a `~ Sex + group` model without explicit batch adjustment. This simpler model is appropriate when batch effects are negligible, as demonstrated by our quality control analyses, and avoids assuming no batch × treatment interaction that cannot be tested with the current design.

However, we acknowledge that this approach makes the implicit assumption that any residual batch effects affect both GFP controls and Cre-AAV-treated samples similarly within Batch 2. The inclusion of sex as a covariate further accounts for a major source of biological variation orthogonal to both batch and treatment effects. *While not eliminating potential batch effects entirely, the combination of empirical validation (PCA), cross-batch control representation, and conservative statistical thresholds provides a reasonable framework for identifying differentially expressed genes in this nested design*.

## Data Processing and Quality Control

```{r}
library(tidyverse)
library(DESeq2)
library(EnhancedVolcano)
library(kableExtra)
library(patchwork)

all_mice <- readRDS("data/20251020-steve_expressionSet.rds")
```

The distribution of median gene expression values across all samples exhibited the characteristic right-skewed pattern typical of RNA-seq count data, with the majority of genes expressed at low levels and only a small subset displaying high expression (log₁₀ \> 4). This initial assessment confirmed that lowly expressed, noise-dominated genes predominated in the raw dataset prior to filtering and normalization.

```{r}
#|fig-height: 4
hist(log(matrixStats::rowMedians(assay(all_mice))+1),
     main = "log median gene expression\nacross all samples",
     xlab = "Log10 Median Gene Expression\n(Counts + 1)")

```

```{r}
# Create initial DESeq2 dataset without specifying a design formula.
dds0 <- DESeqDataSet(all_mice,
                        design = ~ 1 )

# Lowly expressed genes are filtered out to improve statistical power and reduce noise.
# Only genes with at least 20 counts in 5 or more samples are retained.
keep <- rowSums(counts(dds0) >= 20) >= 5
dds_keep <- dds0[keep,]
# Collapse technical replicates by averaging counts for samples with the same name prefix before the first dot.
collapsed_names <- str_split_i(colnames(dds_keep), pattern = "\\.", i = 1)
dds <- collapseReplicates(dds_keep, 
              groupby = collapsed_names,
              run = collapsed_names,
              renameCols = TRUE)
```

-   Genes with very low read counts were excluded to minimize technical noise. After filtering for a minimum of 20 counts in at least five samples, approximately `r nrow(dds)` genes were retained for downstream analysis.

    -   Filtering removes genes with little information (low counts / expressed in few samples), which stabilizes dispersion estimates and multiple‑testing behavior.

    -   The choice of cutoff (20 counts, ≥5 samples) is arbitrary

-   Technical replicates were collapsed by averaging counts.\

-   DESeq2 model includes sex: `~ Sex + group`

To minimize technical noise and improve statistical power, genes with fewer than 20 counts in at least five samples were excluded from downstream analysis, retaining approximately `r nrow(dds)` genes. This filtering step removes genes with minimal information content, those with low counts or expression in few samples, thereby stabilizing dispersion estimates and improving multiple-testing correction. While the specific cutoff (20 counts in ≥5 samples) is somewhat arbitrary, it represents a reasonable balance between retaining informative genes and excluding noise. Technical replicates were collapsed by averaging their counts prior to statistical modeling.

Differential expression analysis was performed using DESeq2 with a design formula accounting for both biological sex and treatment group (`~ Sex + group`), with GFP Control set as the reference level.

## Differential Expression Analysis

### Liver

```{r}
# Subset to switch mice
dds_switch_liver <- DESeqDataSet(dds[,dds$mice == "switch" & dds$Tissue == "Liver"],
  design = ~ Sex + group)

# Relevel to set GFP Control as the reference group
dds_switch_liver$group = relevel(dds_switch_liver$group, ref = "GFP Control")

# Run DESeq2
des_switch_liver <- DESeq(dds_switch_liver)

# Check results names
# resultsNames(des_switch_liver)

# Get results
res_liver_all <- results(des_switch_liver) |> as.data.frame()

significant_genes <- res_liver_all |> 
  rownames_to_column(var = "gene") |> 
  filter(padj < 0.01 & abs(log2FoldChange) > 1)
```

In liver tissue from all mice (males and females combined), we identified `r nrow(significant_genes)` significantly differentially expressed genes (FDR \< 0.01, \|log2FC\| \> 1) between Cre-AAV and GFP control mice.

##### **Diagnostic plots for the DE analysis** {.unnumbered}

```{r}
#|fig-width: 8
#|fig-height: 3

p <- ggplot(res_liver_all,aes(pvalue)) +
  geom_histogram(binwidth = 0.05, fill = "lightblue", color = "darkblue") +
  labs(
     title = "Computed p-values\n for all genes",
     x = "\np-value (Wald test)")+
      theme_minimal()


b <- ggplot(significant_genes,aes(log(baseMean+1))) +
  geom_histogram( fill = "lightblue", color = "darkblue") +
  labs(
     title = "Log baseMean for all significant genes",
     x = "\nLog10 (baseMean + 1)")+
      theme_minimal()

p|b
```

Diagnostic plots confirmed the validity of the analysis. The p-value distribution showed substantial enrichment for low p-values, indicating the presence of genuine differential expression rather than an all-noise result. Additionally, the log(baseMean) distribution for significant genes was strongly skewed toward moderate-to-high expression levels, demonstrating that our findings are driven by well-expressed features rather than low-count noise that can spuriously inflate fold-changes and p-values.

##### **Significantly differentially expressed genes in liver**<br>Cre-AAV and GFP control <br>(FDR \< 0.01, \|log2FC\| \> 1) {.unnumbered}

```{r}

# Display significant genes in a table
significant_genes |> 
  select(gene,baseMean, log2FoldChange, padj) |>
  arrange(padj) |> 
  kable(digits = 2) |> 
  kable_styling(full_width = F) |> 
  scroll_box(width = "100%", height = "400px")

```

```{r}
clean_res_liver_all <- res_liver_all |> 
  rownames_to_column(var = "gene") |>
  mutate(clean = ifelse (str_detect(gene,"^Rp|^Gm|^mt|ENSMUS|-ps|-rs|Rik$"), NA,gene), .after = "gene")

clean_n_liver_all <- clean_res_liver_all |> 
  filter(!is.na(clean)) |> 
  filter(padj < 0.01 & abs(log2FoldChange) > 1)

```

To focus on high-confidence, biologically interpretable results, we applied an additional filtering step to remove pseudogenes (*-ps, -rs*), unannotated loci (*Gm-, Rik, ENSMUS*), mitochondrial (*-mt*), and ribosomal (*-Rp*) genes. This yielded `r nrow(clean_n_liver_all)` high-confidence nuclear genes that were consistently dysregulated in response to Cre-mediated ApoE4→ApoE2 conversion in liver, after adjusting for sex effects.

```{r}
clean_n_liver_all |> 
  select(gene,baseMean, log2FoldChange, padj) |>
  arrange(padj) |> 
  kable(digits = 2) |> 
  kable_styling(full_width = F) |> 
  scroll_box(width = "100%", height = "400px")
```

```{r}
#|fig-width: 9
#| fig-height: 6

# Create a volcano plot for differentially expressed genes (DEGs) in the liver
EnhancedVolcano(clean_res_liver_all,
    # Label the points on the plot with gene names from the rownames of res_sc
    lab = clean_res_liver_all$clean,
    # Set the main title of the plot
    title = "Differentially expressed genes (DEGs)",
    # Set the subtitle indicating the comparison groups
    subtitle = "Cre-AAV vs. GFP control +/+",
    ylab = bquote(~-Log[10] ~ italic(pvalue)),
    # Customize the legend labels for different categories of DEGs
    legendLabels = c("NS", 
                     expression(paste("|",Log[2], " FC","|", " >1")), 
                     "FDR < 0.05", 
                     expression(paste("FDR < 0.05 and ","|",Log[2], " FC","|", " >1"))),
    # Set the caption below the plot (empty in this case)
    caption = "",
    # Set the size and face of the labels on the plot
    labSize = 5, labFace = "italic",
    # Position the legend to the right of the plot
     legendPosition = 'no',
    # Draw lines connecting labels to their corresponding points
    drawConnectors = TRUE,
    # Connect labels to points in both directions (from left and right)
    directionConnectors = "both",
    # Allow for an infinite number of overlapping points to be labeled
    max.overlaps = Inf,
    # Set the fold change cutoff for highlighting DEGs
    FCcutoff = 1,
    # Specify the column to use for the p-value cutoff
    pCutoffCol = "padj",
    # Set the p-value cutoff for significance
    pCutoff = 0.01,
    #cutoffLineType = "blank",
    # Set the x-axis to represent log2 fold change
    x = 'log2FoldChange',
    # Set the y-axis to represent the p-value
    y = 'pvalue',
    #ylim = c(0,8)
    xlim = c(-11,11)
)
```

### Brain

```{r}
# Subset to switch mice
dds_switch_brain <- DESeqDataSet(dds[,dds$mice == "switch" & dds$Tissue == "Brain"],
  design = ~ Sex + group)

# Relevel to set GFP Control as the reference group
dds_switch_brain$group = relevel(dds_switch_brain$group, ref = "GFP Control")

# Run DESeq2
des_switch_brain <- DESeq(dds_switch_brain)

# Check results names
# resultsNames(des_switch_brain)

# Get results
res_brain_all <- results(des_switch_brain) |> as.data.frame()

significant_genes_brain <- res_brain_all |> 
  rownames_to_column(var = "gene") |> 
  filter(padj < 0.01 & abs(log2FoldChange) > 1)
```

In brain tissue from all mice, we identified `r nrow(significant_genes_brain)` significantly differentially expressed genes between Cre-AAV and GFP control animals using the same statistical thresholds (FDR \< 0.01, \|log2FC\| \> 1).

##### **Diagnostic plots for the DE analysis** {.unnumbered}

```{r}
#|fig-width: 8
#|fig-height: 3

p <- ggplot(res_brain_all,aes(pvalue)) +
  geom_histogram(binwidth = 0.05, fill = "lightblue", color = "darkblue") +
  labs(
     title = "Computed p-values\n for all genes",
     x = "\np-value (Wald test)")+
      theme_minimal()


b <- ggplot(significant_genes_brain,aes(log(baseMean+1))) +
  geom_histogram( fill = "lightblue", color = "darkblue") +
  labs(
     title = "Log baseMean for all significant genes",
     x = "\nLog10 (baseMean + 1)")+
      theme_minimal()

p|b
```

Similar to the liver analysis, diagnostic plots validated the robustness of these findings. The p-value histogram demonstrated clear enrichment for low p-values, and the baseMean distribution for significant genes indicated that differential expression was predominantly detected in moderately-to-highly expressed genes rather than low-count noise.

##### **Significantly differentially expressed genes in brain**<br>Cre-AAV and GFP control <br>(FDR \< 0.01, \|log2FC\| \> 1) {.unnumbered}

```{r}

# Display significant genes in a table
significant_genes_brain |> 
  select(gene,baseMean, log2FoldChange, padj) |>
  arrange(padj) |> 
  kable(digits = 2) |> 
  kable_styling(full_width = F) |> 
  scroll_box(width = "100%", height = "400px")

```

```{r}
clean_res_brain_all <- res_brain_all |> 
  rownames_to_column(var = "gene") |>
  mutate(clean = ifelse (str_detect(gene,"^Rp|^Gm|^mt|ENSMUS|-ps|-rs|Rik$"), NA,gene), .after = "gene")

clean_n_brain_all <- clean_res_brain_all |> 
  filter(!is.na(clean)) |> 
  filter(padj < 0.01 & abs(log2FoldChange) > 1)



```

After applying the same filtering criteria to exclude pseudogenes, unannotated loci, mitochondrial genes, and ribosomal protein genes, we retained `r nrow(clean_n_liver_all)` high-confidence nuclear genes that showed consistent dysregulation in brain tissue following Cre-mediated ApoE4→ApoE2 conversion, adjusted for sex.

```{r}
clean_n_brain_all |> 
  select(gene,baseMean, log2FoldChange, padj) |>
  arrange(padj) |> 
  kable(digits = 2) |> 
  kable_styling(full_width = F) |> 
  scroll_box(width = "100%", height = "400px")

```

```{r}
#|fig-width: 9
#| fig-height: 6
# Create a volcano plot for differentially expressed genes (DEGs) in the liver
EnhancedVolcano(clean_res_brain_all,
    # Label the points on the plot with gene names from the rownames of res_sc
    lab = clean_res_liver_all$clean,
    # Set the main title of the plot
    title = "Differentially expressed genes (DEGs)",
    # Set the subtitle indicating the comparison groups
    subtitle = "Cre-AAV vs. GFP control +/+",
    ylab = bquote(~-Log[10] ~ italic(pvalue)),
    # Customize the legend labels for different categories of DEGs
    legendLabels = c("NS", 
                     expression(paste("|",Log[2], " FC","|", " >1")), 
                     "FDR < 0.05", 
                     expression(paste("FDR < 0.05 and ","|",Log[2], " FC","|", " >1"))),
    # Set the caption below the plot (empty in this case)
    caption = "",
    # Set the size and face of the labels on the plot
    labSize = 5, labFace = "italic",
    # Position the legend to the right of the plot
     legendPosition = 'no',
    # Draw lines connecting labels to their corresponding points
    drawConnectors = TRUE,
    # Connect labels to points in both directions (from left and right)
    directionConnectors = "both",
    # Allow for an infinite number of overlapping points to be labeled
    max.overlaps = Inf,
    # Set the fold change cutoff for highlighting DEGs
    FCcutoff = 1,
    # Specify the column to use for the p-value cutoff
    pCutoffCol = "padj",
    # Set the p-value cutoff for significance
    pCutoff = 0.01,
    #cutoffLineType = "blank",
    # Set the x-axis to represent log2 fold change
    x = 'log2FoldChange',
    # Set the y-axis to represent the p-value
    y = 'pvalue',
    #ylim = c(0,8)
    xlim = c(-11,11)
)
```

### Common DEGs in liver and brain

```{r}
common_degs <- intersect(clean_n_brain_all$gene, clean_n_liver_all$gene)


```

To identify core molecular responses to ApoE isoform conversion that occur independently of tissue context, we intersected the lists of high-confidence DEGs from liver and brain. This analysis revealed `r length(common_degs)` genes that were significantly differentially expressed in both tissues (FDR \< 0.01, \|log₂FC\| \> 1):

```{r}
cat(paste(common_degs, collapse = ", "))
```

These shared DEGs may represent core components of the molecular response to Cre-mediated ApoE4→ApoE2 conversion that operate across multiple tissues. Notably, APOE itself was among the common DEGs, confirming successful isoform switching at the transcriptional level. Interestingly, APOE expression exhibited tissue-specific directional responses: expression decreased in liver but increased in brain following Cre-AAV treatment. This divergent regulation suggests that the ApoE4→ApoE2 conversion triggers distinct tissue-specific feedback mechanisms, potentially reflecting the different roles of ApoE in hepatic lipoprotein metabolism versus neuronal lipid homeostasis and synaptic function. The remaining 18 common DEGs span diverse cellular functions including protein homeostasis (*Hspb1, Uba52rt, Adrm1b, Ube2srt*), metabolism (*Eno1b, Ahcyl*), nucleocytoplasmic transport (*Kpna2rt*), and translational regulation (*Eif3j2, Sap18b*), suggesting that ApoE isoform conversion triggers coordinated transcriptional programs affecting multiple fundamental cellular processes across both liver and brain tissues.