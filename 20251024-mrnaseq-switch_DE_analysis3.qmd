---
title: "Differential Expression Analysis III"
subtitle: "Cre-AAV vs. GFP control in switch mice (batch 2 only)"
date: today
toc: true
toc-depth: 4
embed-resources: true
execute: 
  echo: false
  warning: false
  message: false   
format: html
---


```{r}
library(tidyverse)
library(DESeq2)
library(EnhancedVolcano)
library(kableExtra)
library(patchwork)

all_mice <- readRDS("data/20251020-steve_expressionSet.rds")
```

## Pre-filtering low count genes

```{r}
# Create initial DESeq2 dataset without specifying a design formula.
dds0 <- DESeqDataSet(all_mice,
                        design = ~ 1 )

# Lowly expressed genes are filtered out to improve statistical power and reduce noise.
# Only genes with at least 20 counts in 5 or more samples are retained.
keep <- rowSums(counts(dds0) >= 20) >= 5
dds <- dds0[keep,]
```

Genes with very low read counts were excluded to minimize technical noise. After filtering for a minimum of 20 counts in at least five samples, approximately `r nrow(dds)` genes were retained for downstream analysis.

## Differential Expression Analysis: Cre-AAV vs. GFP control in switch mice (batch 2 only)

To avoid statistical complications from cross-batch replicates and batch-treatment nesting, we analyzed __only Batch 2 samples__ (`~ Sex + group`). This approach ensures true biological independence (each mouse measured once), eliminates batch confounding (both groups processed simultaneously), and provides the cleanest treatment contrast without need for batch adjustment or averaging

### Liver



```{r}
# Subset to switch mice
dds_switch_liver <- DESeqDataSet(dds[,dds$mice == "switch" & dds$Tissue == "Liver" & dds$batch == "2"],
  design = ~ Sex + group)

# Relevel to set GFP Control as the reference group
dds_switch_liver$group = relevel(dds_switch_liver$group, ref = "GFP Control")

# Run DESeq2
des_switch_liver <- DESeq(dds_switch_liver)

# Check results names
# resultsNames(des_switch_liver)

# Get results
res_liver_all <- results(des_switch_liver) |> as.data.frame()

significant_genes <- res_liver_all |> 
  rownames_to_column(var = "gene") |> 
  filter(padj < 0.01 & abs(log2FoldChange) > 1)
```

There are `r nrow(significant_genes)` significantly differentially expressed genes (FDR \< 0.01, \|log2FC\| \> 1) in the liver between Cre-AAV and GFP control switch mice.

##### **Diagnostic plots for the DE analysis** {.unnumbered}

```{r}
#|fig-width: 8
#|fig-height: 3

p <- ggplot(res_liver_all,aes(pvalue)) +
  geom_histogram(binwidth = 0.05, fill = "lightblue", color = "darkblue") +
  labs(
     title = "Computed p-values\n for all genes",
     x = "\np-value (Wald test)")+
      theme_minimal()


b <- ggplot(significant_genes,aes(log(baseMean+1))) +
  geom_histogram( fill = "lightblue", color = "darkblue") +
  labs(
     title = "Log baseMean for all significant genes",
     x = "\nLog10 (baseMean + 1)")+
      theme_minimal()

p|b
```

-   A histogram enriched for low p-values shows the presence of true differential expression (deviation from the uniform null), rather than an all-noise result.\
-   The log(baseMean) distribution for significant genes being skewed toward moderate–high counts indicates findings are driven by well-expressed features, not low-count noise that can inflate fold-changes and p-values.

##### **Significantly differentially expressed genes in liver**<br>Cre-AAV and GFP control <br>(FDR \< 0.01, \|log2FC\| \> 1) {.unnumbered}

```{r}

# Display significant genes in a table
significant_genes |> 
  select(gene,baseMean, log2FoldChange, padj) |>
  arrange(padj) |> 
  kable(digits = 2) |> 
  kable_styling(full_width = F) |> 
  scroll_box(width = "100%", height = "400px")

```

```{r}
clean_res_liver_all <- res_liver_all |> 
  rownames_to_column(var = "gene") |>
  mutate(clean = ifelse (str_detect(gene,"^Rp|^Gm|^mt|ENSMUS|-ps|-rs|Rik$"), NA,gene), .after = "gene")

clean_n_liver_all_3 <- clean_res_liver_all |> 
  filter(!is.na(clean)) |> 
  filter(padj < 0.01 & abs(log2FoldChange) > 1)

```

To focus on high-confidence, biologically interpretable results, we applied an additional filtering step to remove pseudogenes (*-ps, -rs*), unannotated loci (*Gm-, Rik, ENSMUS*), mitochondrial (*-mt*), and ribosomal (*-Rp*) genes. This yielded `r nrow(clean_n_liver_all_3)` high-confidence nuclear genes that were consistently dysregulated in response to Cre-mediated ApoE4→ApoE2 conversion in liver, after adjusting for both sex and batch effects.

```{r}
clean_n_liver_all_3 |> 
  select(gene,baseMean, log2FoldChange, padj) |>
  arrange(padj) |> 
  kable(digits = 2) |> 
  kable_styling(full_width = F) |> 
  scroll_box(width = "100%", height = "400px")
```

```{r}
#|fig-width: 9
#| fig-height: 6

# Create a volcano plot for differentially expressed genes (DEGs) in the liver
EnhancedVolcano(clean_res_liver_all,
    # Label the points on the plot with gene names from the rownames of res_sc
    lab = clean_res_liver_all$clean,
    # Set the main title of the plot
    title = "Differentially expressed genes (DEGs)",
    # Set the subtitle indicating the comparison groups
    subtitle = "Cre-AAV vs. GFP control +/+",
    ylab = bquote(~-Log[10] ~ italic(pvalue)),
    # Customize the legend labels for different categories of DEGs
    legendLabels = c("NS", 
                     expression(paste("|",Log[2], " FC","|", " >1")), 
                     "FDR < 0.05", 
                     expression(paste("FDR < 0.05 and ","|",Log[2], " FC","|", " >1"))),
    # Set the caption below the plot (empty in this case)
    caption = "",
    # Set the size and face of the labels on the plot
    labSize = 5, labFace = "italic",
    # Position the legend to the right of the plot
     legendPosition = 'no',
    # Draw lines connecting labels to their corresponding points
    drawConnectors = TRUE,
    # Connect labels to points in both directions (from left and right)
    directionConnectors = "both",
    # Allow for an infinite number of overlapping points to be labeled
    max.overlaps = Inf,
    # Set the fold change cutoff for highlighting DEGs
    FCcutoff = 1,
    # Specify the column to use for the p-value cutoff
    pCutoffCol = "padj",
    # Set the p-value cutoff for significance
    pCutoff = 0.01,
    #cutoffLineType = "blank",
    # Set the x-axis to represent log2 fold change
    x = 'log2FoldChange',
    # Set the y-axis to represent the p-value
    y = 'pvalue',
    ylim = c(0,13),
    xlim = c(-11,11)
)
```


### Brain

```{r}
# Subset to switch mice
dds_switch_brain <- DESeqDataSet(dds[,dds$mice == "switch" & dds$Tissue == "Brain" & dds$batch == "2"],
  design = ~ Sex + group)

# Relevel to set GFP Control as the reference group
dds_switch_brain$group = relevel(dds_switch_brain$group, ref = "GFP Control")

# Run DESeq2
des_switch_brain <- DESeq(dds_switch_brain)

# Check results names
# resultsNames(des_switch_brain)

# Get results
res_brain_all <- results(des_switch_brain) |> as.data.frame()

significant_genes_brain <- res_brain_all |> 
  rownames_to_column(var = "gene") |> 
  filter(padj < 0.01 & abs(log2FoldChange) > 1)
```

There are `r nrow(significant_genes_brain)` significantly differentially expressed genes (FDR \< 0.01, \|log2FC\| \> 1) in the brain between Cre-AAV and GFP control switch mice.

##### **Diagnostic plots for the DE analysis** {.unnumbered}

```{r}
#|fig-width: 8
#|fig-height: 3

p <- ggplot(res_brain_all,aes(pvalue)) +
  geom_histogram(binwidth = 0.05, fill = "lightblue", color = "darkblue") +
  labs(
     title = "Computed p-values\n for all genes",
     x = "\np-value (Wald test)")+
      theme_minimal()


b <- ggplot(significant_genes_brain,aes(log(baseMean+1))) +
  geom_histogram( fill = "lightblue", color = "darkblue") +
  labs(
     title = "Log baseMean for all significant genes",
     x = "\nLog10 (baseMean + 1)")+
      theme_minimal()

p|b
```

-   The distribution of p-values from the Wald test was approximately uniform, with no enrichment of low p-values


